{"message":"call to `.borrow()` on a reference in this situation does nothing","code":{"code":"noop_method_call","explanation":null},"level":"warning","spans":[{"file_name":"src/conversion.rs","byte_start":3655,"byte_end":3664,"line_start":85,"line_end":85,"column_start":51,"column_end":60,"is_primary":true,"text":[{"text":"            let a_new = (unpack_word_list[counter].borrow().a as f32 / 511.0).clamp(0.0,1.0);","highlight_start":51,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type `PackedValues` does not implement `Borrow`, so calling `borrow` on `&PackedValues` copies the reference, which does not do anything and can be removed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[warn(noop_method_call)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this redundant call","code":null,"level":"help","spans":[{"file_name":"src/conversion.rs","byte_start":3655,"byte_end":3664,"line_start":85,"line_end":85,"column_start":51,"column_end":60,"is_primary":true,"text":[{"text":"            let a_new = (unpack_word_list[counter].borrow().a as f32 / 511.0).clamp(0.0,1.0);","highlight_start":51,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: call to `.borrow()` on a reference in this situation does nothing\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/conversion.rs:85:51\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let a_new = (unpack_word_list[counter].borrow().a as f32 / 511.0).clamp(0.0,1.0);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove this redundant call\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the type `PackedValues` does not implement `Borrow`, so calling `borrow` on `&PackedValues` copies the reference, which does not do anything and can be removed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(noop_method_call)]` on by default\u001b[0m\n\n"}
{"message":"call to `.borrow()` on a reference in this situation does nothing","code":{"code":"noop_method_call","explanation":null},"level":"warning","spans":[{"file_name":"src/conversion.rs","byte_start":3749,"byte_end":3758,"line_start":86,"line_end":86,"column_start":51,"column_end":60,"is_primary":true,"text":[{"text":"            let b_new = (unpack_word_list[counter].borrow().b as f32 / 50.0).clamp(-0.3,0.3);","highlight_start":51,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type `PackedValues` does not implement `Borrow`, so calling `borrow` on `&PackedValues` copies the reference, which does not do anything and can be removed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this redundant call","code":null,"level":"help","spans":[{"file_name":"src/conversion.rs","byte_start":3749,"byte_end":3758,"line_start":86,"line_end":86,"column_start":51,"column_end":60,"is_primary":true,"text":[{"text":"            let b_new = (unpack_word_list[counter].borrow().b as f32 / 50.0).clamp(-0.3,0.3);","highlight_start":51,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: call to `.borrow()` on a reference in this situation does nothing\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/conversion.rs:86:51\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m86\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let b_new = (unpack_word_list[counter].borrow().b as f32 / 50.0).clamp(-0.3,0.3);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove this redundant call\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the type `PackedValues` does not implement `Borrow`, so calling `borrow` on `&PackedValues` copies the reference, which does not do anything and can be removed\u001b[0m\n\n"}
{"message":"call to `.borrow()` on a reference in this situation does nothing","code":{"code":"noop_method_call","explanation":null},"level":"warning","spans":[{"file_name":"src/conversion.rs","byte_start":3843,"byte_end":3852,"line_start":87,"line_end":87,"column_start":51,"column_end":60,"is_primary":true,"text":[{"text":"            let c_new = (unpack_word_list[counter].borrow().c as f32 / 50.0).clamp(-0.3,0.3);","highlight_start":51,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type `PackedValues` does not implement `Borrow`, so calling `borrow` on `&PackedValues` copies the reference, which does not do anything and can be removed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this redundant call","code":null,"level":"help","spans":[{"file_name":"src/conversion.rs","byte_start":3843,"byte_end":3852,"line_start":87,"line_end":87,"column_start":51,"column_end":60,"is_primary":true,"text":[{"text":"            let c_new = (unpack_word_list[counter].borrow().c as f32 / 50.0).clamp(-0.3,0.3);","highlight_start":51,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: call to `.borrow()` on a reference in this situation does nothing\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/conversion.rs:87:51\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let c_new = (unpack_word_list[counter].borrow().c as f32 / 50.0).clamp(-0.3,0.3);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove this redundant call\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the type `PackedValues` does not implement `Borrow`, so calling `borrow` on `&PackedValues` copies the reference, which does not do anything and can be removed\u001b[0m\n\n"}
{"message":"call to `.borrow()` on a reference in this situation does nothing","code":{"code":"noop_method_call","explanation":null},"level":"warning","spans":[{"file_name":"src/conversion.rs","byte_start":3937,"byte_end":3946,"line_start":88,"line_end":88,"column_start":51,"column_end":60,"is_primary":true,"text":[{"text":"            let d_new = (unpack_word_list[counter].borrow().d as f32 / 50.0).clamp(-0.3,0.3);","highlight_start":51,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type `PackedValues` does not implement `Borrow`, so calling `borrow` on `&PackedValues` copies the reference, which does not do anything and can be removed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this redundant call","code":null,"level":"help","spans":[{"file_name":"src/conversion.rs","byte_start":3937,"byte_end":3946,"line_start":88,"line_end":88,"column_start":51,"column_end":60,"is_primary":true,"text":[{"text":"            let d_new = (unpack_word_list[counter].borrow().d as f32 / 50.0).clamp(-0.3,0.3);","highlight_start":51,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: call to `.borrow()` on a reference in this situation does nothing\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/conversion.rs:88:51\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let d_new = (unpack_word_list[counter].borrow().d as f32 / 50.0).clamp(-0.3,0.3);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove this redundant call\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the type `PackedValues` does not implement `Borrow`, so calling `borrow` on `&PackedValues` copies the reference, which does not do anything and can be removed\u001b[0m\n\n"}
{"message":"call to `.borrow()` on a reference in this situation does nothing","code":{"code":"noop_method_call","explanation":null},"level":"warning","spans":[{"file_name":"src/conversion.rs","byte_start":4043,"byte_end":4052,"line_start":89,"line_end":89,"column_start":63,"column_end":72,"is_primary":true,"text":[{"text":"            let pb = chroma_of_index(unpack_word_list[counter].borrow().avg_pb as usize);","highlight_start":63,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type `PackedValues` does not implement `Borrow`, so calling `borrow` on `&PackedValues` copies the reference, which does not do anything and can be removed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this redundant call","code":null,"level":"help","spans":[{"file_name":"src/conversion.rs","byte_start":4043,"byte_end":4052,"line_start":89,"line_end":89,"column_start":63,"column_end":72,"is_primary":true,"text":[{"text":"            let pb = chroma_of_index(unpack_word_list[counter].borrow().avg_pb as usize);","highlight_start":63,"highlight_end":72}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: call to `.borrow()` on a reference in this situation does nothing\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/conversion.rs:89:63\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let pb = chroma_of_index(unpack_word_list[counter].borrow().avg_pb as usize);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove this redundant call\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the type `PackedValues` does not implement `Borrow`, so calling `borrow` on `&PackedValues` copies the reference, which does not do anything and can be removed\u001b[0m\n\n"}
{"message":"call to `.borrow()` on a reference in this situation does nothing","code":{"code":"noop_method_call","explanation":null},"level":"warning","spans":[{"file_name":"src/conversion.rs","byte_start":4133,"byte_end":4142,"line_start":90,"line_end":90,"column_start":63,"column_end":72,"is_primary":true,"text":[{"text":"            let pr = chroma_of_index(unpack_word_list[counter].borrow().avg_pr as usize);","highlight_start":63,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the type `PackedValues` does not implement `Borrow`, so calling `borrow` on `&PackedValues` copies the reference, which does not do anything and can be removed","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this redundant call","code":null,"level":"help","spans":[{"file_name":"src/conversion.rs","byte_start":4133,"byte_end":4142,"line_start":90,"line_end":90,"column_start":63,"column_end":72,"is_primary":true,"text":[{"text":"            let pr = chroma_of_index(unpack_word_list[counter].borrow().avg_pr as usize);","highlight_start":63,"highlight_end":72}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: call to `.borrow()` on a reference in this situation does nothing\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/conversion.rs:90:63\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let pr = chroma_of_index(unpack_word_list[counter].borrow().avg_pr as usize);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: remove this redundant call\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the type `PackedValues` does not implement `Borrow`, so calling `borrow` on `&PackedValues` copies the reference, which does not do anything and can be removed\u001b[0m\n\n"}
{"message":"6 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 6 warnings emitted\u001b[0m\n\n"}
